resources:
  repositories:
    - repository: templatesRepo
      type: git
      name: PipelineSamplesTemplates/templates-apim
      ref: refs/heads/main
    
trigger: none

parameters:
  - name: pool
    type: string
    default: 'ubuntu-latest'
    values:
      - 'ubuntu-latest'
      - 'ubuntu-24.04'
      - 'Konia-Pool'
  - name: ApplicationName
    type: string
    default: '$(Build.Repository.Name)'
  - name: ApiGroup
    type: string
    default: 'pagamentos'
  - name: ArtifactName
    type: string
    default: 'drop'
  - name: BuildTool
    type: string
    default: 'Gradle'
    values:
      - 'Gradle'
      - 'Maven'

variables:
  imageName: 'koniasample'
  # System.TeamProject: '$(System.TeamProject)' # Nome do projeto onde esta a pipeline
  ContentPath: '$(System.DefaultWorkingDirectory)' # Caminho para os arquivos que serão copiados para a pasta do pacote que será gerado.
  SonarConnection: '' # Nome da Service Connection do Sonaqube
  SonarProjectKey: '' # ProjectKey do projeto no Sonarqube
  SonarProjectName: '' # ProjectName do projeto no Sonarqube

stages:
  - stage: Build
    displayName: "Build Java App"
    jobs:
      - ${{ if eq(parameters.BuildTool, 'Gradle') }}:
        - template: build-gradle-template.yml@templatesRepo
          parameters:
            pool: ${{ parameters.pool }}
            ApplicationName: ${{ parameters.ApplicationName }}
            ArtifactName: ${{ parameters.ArtifactName }}
      - ${{ if eq(parameters.BuildTool, 'Maven') }}:
        - template: development/api/java/build-maven-template.yml@templatesRepo
          parameters:
            pool: ${{ parameters.pool }}
            ApplicationName: ${{ parameters.ApplicationName }}
            ArtifactName: ${{ parameters.ArtifactName }}

  - stage: DeployDev
    displayName: "Deploy to DEV"
    dependsOn: Build
    jobs:
      - template: docker-build-template.yml@templatesRepo
        parameters:
          registryName: 'acrkoniasamples.azurecr.io'
          imageName: "${{ parameters.ApiGroup }}-$(imageName)-dev"
          tag: $(Build.BuildId)
          artifactName: 'drop'

      - template: deploy-aca-template.yml@templatesRepo
        parameters:
          environmentName: 'DEV'
          imageTag: $(Build.BuildId)
          imageName: "${{ parameters.ApiGroup }}-$(imageName)-dev"
          ApiGroup: '${{ parameters.ApiGroup }}'

  - stage: DeployQA
    displayName: "Deploy to QA"
    dependsOn: DeployDev
    jobs:
      - template: docker-build-template.yml@templatesRepo
        parameters:
          registryName: 'acrkoniasamples.azurecr.io'
          imageName: "${{ parameters.ApiGroup }}-$(imageName)-qa"
          tag: $(Build.BuildId)
          artifactName: 'drop'

      - template: deploy-aca-template.yml@templatesRepo
        parameters:
          environmentName: 'QA'
          imageTag: $(Build.BuildId)
          imageName: "${{ parameters.ApiGroup }}-$(imageName)-qa"
          ApiGroup: '${{ parameters.ApiGroup }}'

  - stage: DeployHML
    displayName: "Deploy to HML"
    dependsOn: DeployQA
    jobs:
      - template: docker-build-template.yml@templatesRepo
        parameters:
          registryName: 'acrkoniasamples.azurecr.io'
          imageName: "${{ parameters.ApiGroup }}-$(imageName)-hml"
          tag: $(Build.BuildId)
          artifactName: 'drop'

      - template: deploy-aca-template.yml@templatesRepo
        parameters:
          environmentName: 'HML'
          imageTag: $(Build.BuildId)
          imageName: "${{ parameters.ApiGroup }}-$(imageName)-hml"
          ApiGroup: '${{ parameters.ApiGroup }}'

  - stage: DeployProd
    displayName: "Deploy to PROD"
    dependsOn: DeployHML
    jobs:
      - template: docker-build-template.yml@templatesRepo
        parameters:
          registryName: 'acrkoniasamples.azurecr.io'
          imageName: "${{ parameters.ApiGroup }}-$(imageName)-prd"
          tag: $(Build.BuildId)
          artifactName: 'drop'

      - template: deploy-aca-template.yml@templatesRepo
        parameters:
          environmentName: 'PRD'
          imageTag: $(Build.BuildId)
          imageName: "${{ parameters.ApiGroup }}-$(imageName)-prd"
          ApiGroup: '${{ parameters.ApiGroup }}'