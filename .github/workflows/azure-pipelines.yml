resources:
  repositories:
    - repository: templatesRepo
      type: git
      name: PipelineSamplesTemplates/templates-apim
      ref: refs/heads/main

trigger: none

parameters:
  - name: BuildTool
    type: string
    default: 'Gradle'
    values:
      - 'Maven'
      - 'Gradle'

variables:
  imageName: 'koniasample'

stages:
  - stage: Build
    displayName: "Build Java App"
    jobs:
      - ${{ if eq(parameters.BuildTool, 'Gradle') }}:
        - template: build-gradle-template.yml@templatesRepo
          parameters:
            buildConfiguration: 'Release'
      - ${{ if eq(parameters.BuildTool, 'Maven') }}:
        - template: build-maven-template.yml@templatesRepo
          parameters:
            buildConfiguration: 'Release'

  - stage: Docker
    displayName: "Build Docker Image and Push to ACR"
    dependsOn: Build
    jobs:
      - template: docker-build-template.yml@templatesRepo
        parameters:
          registryName: 'acrkoniasamples.azurecr.io'
          imageName: $(imageName)
          tag: $(Build.BuildId)
          artifactName: 'drop'
          
  - stage: DeployDev
    displayName: "Deploy to DEV"
    dependsOn: Docker
    jobs:
      - template: deploy-aca-template.yml@templatesRepo
        parameters:
          environmentName: 'DEV'
          imageTag: $(Build.BuildId)
          imageName: $(imageName)

  - stage: DeployQA
    displayName: "Deploy to QA"
    dependsOn: DeployDev
    jobs:
      - template: deploy-aca-template.yml@templatesRepo
        parameters:
          environmentName: 'QA'
          imageTag: $(Build.BuildId)
          imageName: $(imageName)

  - stage: DeployHML
    displayName: "Deploy to HML"
    dependsOn: DeployQA
    jobs:
      - template: deploy-aca-template.yml@templatesRepo
        parameters:
          environmentName: 'HML'
          imageTag: $(Build.BuildId)
          imageName: $(imageName)

  - stage: DeployProd
    displayName: "Deploy to PROD"
    dependsOn: DeployHML
    jobs:
      - template: deploy-aca-template.yml@templatesRepo
        parameters:
          environmentName: 'PRD'
          imageTag: $(Build.BuildId)
          imageName: $(imageName)
